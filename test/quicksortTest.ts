// eslint-disable-next-line import/order
import { expect } from 'chai';
import { quicksort } from '../src/quicksort';

describe('Quicksort', function () {
  it('should return [2, 3, 5, 7, 8, 10]', async function () {
    expect(quicksort([10, 3, 2, 5, 7, 8]).join()).to.equal([2, 3, 5, 7, 8, 10].join());
  });

  it('should return [1,2,3,4,5,6,7,8,9,10]', async function () {
    expect(quicksort([10, 9, 8, 7, 6, 5, 4, 3, 2, 1]).join()).to.equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10].join());
  });

  it('should return [34,34]', async function () {
    expect(quicksort([34, 34]).join()).to.equal([34, 34].join());
  });

  it('should return [1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3]', async function () {
    expect(quicksort([1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3]).join()).to.equal([1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3].join());
  });

  it('should return sorted array', async function () {
    expect(quicksort([54, 65, 76, 87, 89, 12, 23, 43, 7, 5, 3, 2, 1, 2, 3, 4, 65, 7, 8, 876]).join()).to.equal([1, 2, 2, 3, 3, 4, 5, 7, 7, 8, 12, 23, 43, 54, 65, 65, 76, 87, 89, 876].join());
  });

  it('should return sorted array', async function () {
    expect(quicksort([43, 7, 5, 3, 2, 1, 2, 3, 4, 65, 7, 8, 876]).join()).to.equal([1, 2, 2, 3, 3, 4, 5, 7, 7, 8, 43, 65, 876].join());
  });

  it('should return sorted array', async function () {
    expect(
      quicksort([
        43, 7, 5, 3, 2, 1, 2, 3, 4, 65, 7, 3, 43, 545, 54, 65, 67, 87, 8, 98, 87, 67, 65, 54, 45, 34, 32, 1, 2, 2, 3, 4, 5, 98, 67, 45, 43, 123, 435, 654, 675, 758, 9, 7, 6, 5, 4343, 23, 2, 1, 2, 3,
        4, 6, 7, 87, 8, 9, 9, 9, 8, 7, 65, 435, 546, 67, 675, 785, 76, 896, 876, 67, 564, 543, 255, 432, 43, 234, 2, 543, 453, 23, 243, 243, 234, 54, 7, 8, 9, 7, 6, 5, 435, 6, 67, 78, 98, 36, 487, 59,
        59, 73, 26, 42, 365, 74, 8, 96, 85, 63, 26, 253, 53, 64, 67, 687, 978, 47, 3, 2, 8, 876,
      ]).join(),
    ).to.equal(
      [
        1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 23, 23, 26, 26, 32, 34, 36, 42, 43, 43, 43, 43, 45,
        45, 47, 53, 54, 54, 54, 59, 59, 63, 64, 65, 65, 65, 65, 67, 67, 67, 67, 67, 67, 67, 73, 74, 76, 78, 85, 87, 87, 87, 96, 98, 98, 98, 123, 234, 234, 243, 243, 253, 255, 365, 432, 435, 435, 435,
        453, 487, 543, 543, 545, 546, 564, 654, 675, 675, 687, 758, 785, 876, 876, 896, 978, 4343,
      ].join(),
    );
  });
});
